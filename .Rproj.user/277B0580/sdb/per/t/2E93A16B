{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Bundesliga_Bayern_Munich_Analysis\"\nauthor: \"Nade Kang\"\ndate: \"July 27, 2018\"\noutput: html_document\n---\n\n#__**Football Analysis Using R for FC Bayern Munich**__\n## This project currently adopts R's tidyverse package as its main analysis tool\n\n**Load Library**\n\n```{r setup, results='hide'}\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(magick)\n```\n\n**__1. Introduction__** This is the R Markdown \n\nIn this analysis, we are going to use the csv file called \"bundesliga_team_stats_standard_2013_18\", \nwhich I scraped down from Foxsports. I hereby confirm that this dataset will only be used for educational\npurposes, and by no means, used for commercial purposes. If requested, I will delete the scraped dataset.\n\nSo to further understand what this dataset contains, let's take a look at it. \n\n```{r readData, results='hide'}\nbundesliga <- read_csv(\"Data/bundesliga_team_stats_standard_2013_18.csv\", col_names = TRUE, locale = locale(encoding = \"latin1\"))\n```\n\n```{r bundesliga_table}\nknitr::kable(\n  bundesliga[1:10, ],\n  caption = \"Bundesliga Dataset\"\n)\n```\n\n\nSo we can see that the dataset contains `r ncol(bundesliga)` columns and `r nrow(bundesliga)` rows. When scraping\nthe dataset, I only included the current 2018/19 new seasons' teams, which means, the two demoted HSV Hamburg and \nFC Köln are not included. However, Fortuna Düsseldorf and 1. FC Nürnberg's data format doesn't match with the other\nteams, therefore, their data, which only contains the statistics in Bundesliga 2, are also not included. This leaves\nus with the following teams:\n\n```{r clubs}\nclub <- bundesliga[\"Team\"]\nclub <- unique(club)\nknitr::kable(club, caption = \"Teams included in the Data\")\n```\n\nThe dataset, contains all these 16 teams' Bundesliga performance. This means, if one of these teams had been demoted to\nBundesliga 2 during 2013 to 2017, the data in the Bundesliga 2 period will not be included here.\n\n**__2. Data Wrangling__** Cleaning the data and extract information\n\nSuppose we are interested in the performance of Lewandowski during the 2013/14 season to 2017/18 season. We know that he\nused to play for Borussia Dortmund before he transferred to FC Bayern Munich. Since we also included Borussia Dortmund's data\nhere, we can simply filter out the data that contains Lewandowski's name.\n\n```{r Lewandowski}\nlewandowski <- bundesliga %>% \n  filter(Name == 'Lewandowski, Robert') %>% \n  # We cannot use the original Season column to make sorting,\n  # So I separate the Season variable into Season_start and Season_end\n  # and then arranged the dataset using Season_start\n  # We do not want to remove the original column, so set remove = FALSE\n  # Keep the original Season column as a name that we want to use later\n  separate(Season, into = c(\"Season_start\", \"Season_end\"), sep = \"/\", remove = FALSE) %>% \n  arrange(Season_start) %>% \n  # I have strong interests in Lewandowski's performance such as scoring\n  # rate out of shots attemped, scoring rate out of shots_on_goal, and also\n  # minutes played per goal and so on. Use mutate to create these variables.\n  mutate(scoring_rate = Goals / Shots,\n         scoring_rate_on_goal = Goals / Shots_On_Goal,\n         min_per_goal = Minutes_Played / Goals,\n         matches_per_goal = Games_Played / Goals\n         )\n\nlewan_temp <- lewandowski %>% \n  select(Season, Team, Name, scoring_rate, scoring_rate_on_goal, min_per_goal, matches_per_goal)\nknitr::kable(lewan_temp,\n             caption = \"Lewandowski's Dataset\")\n```\n\nNow I have mutated the original \"lewandowski\" dataset that I extracted from the \"bundesliga\" dataset. The\nvariables added are:\n\n1. **_scoring_rate_**: The number of goals scored out of the total number of shots made:\n2. **_scoring_rate_on_goal_**: The number of goals scored out of total number of shots on goal\n3. **_goals_per_min_**: The number of goals per minute played in the match\n4. **_goals_per_match_**: The number of goals per match played\n\nThese newly added variables will help us understand Lewandowski's scoring efficiency as a striker.\n\n```{r lewanPlot, eval=FALSE}\n# Insert images ggplot2\nlogo_ggplot2 <- image_read(\"Images/Bayern_Munich/ggplot2.jpg\")\nlogo <- logo_ggplot2 %>%\n  image_scale(\"100\") %>% \n  image_background(\"grey\", flatten = TRUE) %>%\n  image_border(\"grey\", \"600x10\") %>%\n  image_annotate(\"Powered By R\", color = \"grey\", size = 30, \n                 location = \"+10+50\", gravity = \"northeast\")\n\n# Insert images FC Bayern Munich\n\nlogo_bayern <- image_read(\"Images/Bayern_Munich/fcb_logo.png\")\nlogo_bayern_final <- logo_bayern %>% \n   image_scale(\"100\") %>% \n   image_background(\"grey\", flatten = TRUE) %>% \n   image_border(\"grey\", \"600x10\") %>% \n   image_annotate(\"FC Bayern Munich\", color = \"red\", size = 30,\n                  location = \"+20+50\", gravity= \"northeast\")\n\n```\n\nMaking the plot:\n\n```{r scoring_rate}\n# Scoring Rate Lewandowski\n\nscoring_rate_Lewan <- ggplot(lewandowski, aes(Season, scoring_rate)) +\n  geom_point(shape = 21, size = 2, color = \"red\", fill = \"white\", stroke = 2) +\n  scale_x_discrete(\"\\nBundesliga Season\", label = c(\"13/14 Season\", \"14/15 Season\", \"15/16 Season\", \"16/17 Season\", \"17/18 Season\")) +\n  scale_y_continuous(\"Goals Scoring Rate\\n\", labels = scales::percent ) +\n  labs(title = \"Lewandowski 2013-2017 Scoring Rate\") +\n  theme(plot.title = element_text(size = 14, hjust = 0.5, family = \"sans\"),\n        axis.title = element_text(size = 14, family = \"sans\"),\n        axis.text = element_text(size = 10),\n        panel.background = element_rect(fill = NA),\n        panel.border = element_rect(linetype = \"dashed\", fill = NA),\n        panel.grid.major = element_line(linetype = \"dashed\", size = 0.5, color = \"grey\")) + \n  geom_label_repel(aes(label = round(scoring_rate,2), \n                       box.padding = 2,\n                       point.padding = 2, \n                       segment.colour = \"grey\"))\nscoring_rate_Lewan\n\nscoring_rate_Lewan + ggsave(filename = \"Images/Bayern_Munich/scoring_rate_Lewan.png\",\n              width = 8, height = 6, dpi = 500)\n\n\n```\n\n\n```{r scoring_rate_png, eval=FALSE}\n# Load original main plot\nplot_Lewan <- image_read(\"Images/Bayern_Munich/scoring_rate_Lewan.png\")\n\n# Combine plots together\nlewan_scoring_final <- image_append(image_scale(c(logo, plot_Lewan, logo_bayern_final), \"800\"), stack = TRUE)\n\n# Save and overwrite the original lewan_main plot\nimage_write(lewan_scoring_final, \"Images/Bayern_Munich/scoring_rate_Lewan.png\")\n```\n\n\nThe final plot looks like this:\n\n```{r scoring_rate_finalplot}\nknitr::include_graphics(\"Images/Bayern_Munich/scoring_rate_Lewan.png\")\n```\n\n\n```{r scoring_rate_on_goal}\nscoring_rate_on_goal_Lewan <- ggplot(lewandowski, aes(Season, scoring_rate_on_goal)) +\n  geom_point(shape = 21, size = 2, color = \"red\", fill = \"white\", stroke = 2) +\n  scale_x_discrete(\"\\nBundesliga Season\", label = c(\"13/14 Season\", \"14/15 Season\", \"15/16 Season\", \"16/17 Season\", \"17/18 Season\")) +\n  scale_y_continuous(\"Scoring Rate on Goal\\n\", labels = scales::percent ) +\n  labs(title = \"Lewandowski 2013-2017 Scoring Rate on Goal\") +\n  theme(plot.title = element_text(size = 14, hjust = 0.5, family = \"sans\"),\n        axis.title = element_text(size = 14, family = \"sans\"),\n        axis.text = element_text(size = 10),\n        panel.background = element_rect(fill = NA),\n        panel.border = element_rect(linetype = \"dashed\", fill = NA),\n        panel.grid.major = element_line(linetype = \"dashed\", size = 0.5, color = \"grey\")) + \n  geom_label_repel(aes(label = round(scoring_rate_on_goal,2), \n                       box.padding = 2,\n                       point.padding = 2, \n                       segment.colour = \"grey\"))\n\nscoring_rate_on_goal_Lewan\n\nscoring_rate_on_goal_Lewan + ggsave(filename = \"Images/Bayern_Munich/scoring_rate_on_goal_Lewan.png\",\n              width = 8, height = 6, dpi = 500)\n```\n\nLet's make the beautified image:\n\n```{r scoring_rate_on_goal_png, eval=FALSE}\n# Load original main plot\nsrog_Lewan <- image_read(\"Images/Bayern_Munich/scoring_rate_on_goal_Lewan.png\")\n\n# Combine plots together\nlewan_srog_final <- image_append(image_scale(c(logo, srog_Lewan, logo_bayern_final), \"800\"), stack = TRUE)\n\n# Save and overwrite the original lewan_main plot\nimage_write(lewan_srog_final, \"Images/Bayern_Munich/scoring_rate_on_goal_Lewan.png\")\n```\n\nFinally\n```{r scoring_rate_on_goal_finalplot}\nknitr::include_graphics(\"Images/Bayern_Munich/scoring_rate_on_goal_Lewan.png\")\n```\n\nNow let's take a look at the minutes per goal figure:\n```{r min_per_goal}\nmin_per_goal_plot <- ggplot(lewandowski, aes(Season, min_per_goal)) +\n  geom_point(shape = 21, size = 2, color = \"red\", fill = \"white\", stroke = 2) +\n  scale_x_discrete(\"\\nBundesliga Season\", label = c(\"13/14 Season\", \"14/15 Season\", \"15/16 Season\", \"16/17 Season\", \"17/18 Season\")) +\n  scale_y_continuous(\"Minutes per Goal\\n\", labels = scales::percent ) +\n  labs(title = \"Lewandowski 2013-2017 Minutes per Goal\") +\n  theme(plot.title = element_text(size = 14, hjust = 0.5, family = \"sans\"),\n        axis.title = element_text(size = 14, family = \"sans\"),\n        axis.text = element_text(size = 10),\n        panel.background = element_rect(fill = NA),\n        panel.border = element_rect(linetype = \"dashed\", fill = NA),\n        panel.grid.major = element_line(linetype = \"dashed\", size = 0.5, color = \"grey\")) + \n  geom_label_repel(aes(label = round(min_per_goal,2), \n                       box.padding = 2,\n                       point.padding = 2, \n                       segment.colour = \"grey\"))\nmin_per_goal_plot\n\nmin_per_goal_plot + ggsave(filename = \"Images/Bayern_Munich/mpg_Lewan.png\",\n              width = 8, height = 6, dpi = 500)\n```\n\nLet's make the beautified image:\n```{r mpg_png}\n# Load original main plot\nmpg_Lewan <- image_read(\"Images/Bayern_Munich/mpg_Lewan.png\")\n\n# Combine plots together\nlewan_mpg_final <- image_append(image_scale(c(logo, mpg_Lewan, logo_bayern_final), \"800\"), stack = TRUE)\n\n# Save and overwrite the original lewan_main plot\nimage_write(lewan_mpg_final, \"Images/Bayern_Munich/mpg_Lewan.png\")\n```\n\nThe plot can be shown as:\n```{r mpg_Lewan_finalplot}\nknitr::include_graphics(\"Images/Bayern_Munich/mpg_Lewan.png\")\n```\n\nFinally, let's take a look at matches per goal figure:\n```{r matches_per_goal}\nmatches_per_goal_plot <- ggplot(lewandowski, aes(Season, matches_per_goal)) +\n  geom_point(shape = 21, size = 2, color = \"red\", fill = \"white\", stroke = 2) +\n  scale_x_discrete(\"\\nBundesliga Season\", label = c(\"13/14 Season\", \"14/15 Season\", \"15/16 Season\", \"16/17 Season\", \"17/18 Season\")) +\n  scale_y_continuous(\"Matches per Goal\\n\", labels = scales::percent ) +\n  labs(title = \"Lewandowski 2013-2017 Matches per Goal\") +\n  theme(plot.title = element_text(size = 14, hjust = 0.5, family = \"sans\"),\n        axis.title = element_text(size = 14, family = \"sans\"),\n        axis.text = element_text(size = 10),\n        panel.background = element_rect(fill = NA),\n        panel.border = element_rect(linetype = \"dashed\", fill = NA),\n        panel.grid.major = element_line(linetype = \"dashed\", size = 0.5, color = \"grey\")) + \n  geom_label_repel(aes(label = round(matches_per_goal,2), \n                       box.padding = 2,\n                       point.padding = 2, \n                       segment.colour = \"grey\"))\nmatches_per_goal_plot\n\nmatches_per_goal_plot + ggsave(filename = \"Images/Bayern_Munich/matchpg_Lewan.png\",\n              width = 8, height = 6, dpi = 500)\n```\n\nLet's make the png plot for matches per goal:\n\n```{r matches_per_goal_png}\n# Load original main plot\nmatchpg_Lewan <- image_read(\"Images/Bayern_Munich/matchpg_Lewan.png\")\n\n# Combine plots together\nlewan_matchpg_final <- image_append(image_scale(c(logo, matchpg_Lewan, logo_bayern_final), \"800\"), stack = TRUE)\n\n# Save and overwrite the original lewan_main plot\nimage_write(lewan_matchpg_final, \"Images/Bayern_Munich/matchpg_Lewan.png\")\n```\n\nThe final plot looks like this:\n\n```{r matchpg_Lewan_finalplot}\nknitr::include_graphics(\"Images/Bayern_Munich/matchpg_Lewan.png\")\n```\n\n\n\nBecause some unknown error here, I could not save this Rmd file as R Markdown file. But the overall is\nlike this.\n\nDone, and you can do more if you want.\n",
    "created" : 1532656032140.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "816103179",
    "id" : "2E93A16B",
    "lastKnownWriteTime" : 1532681057,
    "last_content_update" : 1532681057495,
    "path" : "C:/Users/nade/Desktop/Football Analysis Project/FC_Bayern_Munich_Analysis.Rmd",
    "project_path" : "FC_Bayern_Munich_Analysis.Rmd",
    "properties" : {
        "last_setup_crc32" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}